# config
spring.config.import=classpath:/config/query/project/aws/IAM.properties, \
  classpath:/config/query/project/aws/message.properties

# server
server.port=8092
spring.application.name=project-query-service

# datasource
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:tcp://localhost/~/papaco_project_query;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=true
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# data init
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# jpa
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.hibernate.ddl-auto=create

# logging
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# kafka
# private
spring.kafka.consumer.bootstrap-servers=192.168.56.101:9092,192.168.56.101:9093,192.168.56.101:9094
spring.kafka.consumer.properties.schema.registry.url=http://192.168.56.101:8081
papaco.kafka.mate.avro.topic.name=papaco.mate
papaco.kafka.review.avro.topic.name=papaco.review

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.allow.auto.create.topics=false
spring.kafka.consumer.properties.auto.offset.reset=earliest
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.listener.type=BATCH
spring.kafka.listener.ack-mode=MANUAL
